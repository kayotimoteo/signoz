name: clickhouse-setup
services:
  alertmanager:
    command:
      - --queryService.url=http://query-service:8085
      - --storage.path=/data
    container_name: signoz-alertmanager
    depends_on:
      query-service:
        condition: service_healthy
        required: true
    image: signoz/alertmanager:0.23.7
    networks:
      default: null
    restart: on-failure
    volumes:
      - type: bind
        source: /home/kayo/signoz/deploy/docker/clickhouse-setup/data/alertmanager
        target: /data
        bind:
          create_host_path: true
  clickhouse:
    container_name: signoz-clickhouse
    depends_on:
      zookeeper-1:
        condition: service_started
        required: true
    hostname: clickhouse
    healthcheck:
      test:
        - CMD
        - wget
        - --spider
        - -q
        - 0.0.0.0:8123/ping
      timeout: 5s
      interval: 30s
      retries: 3
    image: clickhouse/clickhouse-server:24.1.2-alpine
    logging:
      options:
        max-file: "3"
        max-size: 50m
    networks:
      default: null
    ports:
      - mode: ingress
        target: 9000
        published: "9000"
        protocol: tcp
      - mode: ingress
        target: 8123
        published: "8123"
        protocol: tcp
      - mode: ingress
        target: 9181
        published: "9181"
        protocol: tcp
    restart: on-failure
    tty: true
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
      nproc: 65535
    volumes:
      - type: bind
        source: /home/kayo/signoz/deploy/docker/clickhouse-setup/clickhouse-config.xml
        target: /etc/clickhouse-server/config.xml
        bind:
          create_host_path: true
      - type: bind
        source: /home/kayo/signoz/deploy/docker/clickhouse-setup/clickhouse-users.xml
        target: /etc/clickhouse-server/users.xml
        bind:
          create_host_path: true
      - type: bind
        source: /home/kayo/signoz/deploy/docker/clickhouse-setup/custom-function.xml
        target: /etc/clickhouse-server/custom-function.xml
        bind:
          create_host_path: true
      - type: bind
        source: /home/kayo/signoz/deploy/docker/clickhouse-setup/clickhouse-cluster.xml
        target: /etc/clickhouse-server/config.d/cluster.xml
        bind:
          create_host_path: true
      - type: bind
        source: /home/kayo/signoz/deploy/docker/clickhouse-setup/data/clickhouse
        target: /var/lib/clickhouse
        bind:
          create_host_path: true
      - type: bind
        source: /home/kayo/signoz/deploy/docker/clickhouse-setup/user_scripts
        target: /var/lib/clickhouse/user_scripts
        bind:
          create_host_path: true
  frontend:
    container_name: signoz-frontend
    depends_on:
      alertmanager:
        condition: service_started
        required: true
      query-service:
        condition: service_started
        required: true
    image: signoz/frontend:0.66.0
    networks:
      default: null
    ports:
      - mode: ingress
        target: 3301
        published: "3301"
        protocol: tcp
    restart: on-failure
    volumes:
      - type: bind
        source: /home/kayo/signoz/deploy/docker/common/nginx-config.conf
        target: /etc/nginx/conf.d/default.conf
        bind:
          create_host_path: true
  hotrod:
    command:
      - all
    container_name: hotrod
    environment:
      JAEGER_ENDPOINT: http://otel-collector:14268/api/traces
    image: jaegertracing/example-hotrod:1.30
    logging:
      options:
        max-file: "3"
        max-size: 50m
    networks:
      default: null
  load-hotrod:
    container_name: load-hotrod
    environment:
      ATTACKED_HOST: http://hotrod:8080
      LOCUST_MODE: standalone
      LOCUST_OPTS: --headless -u 10 -r 1
      NO_PROXY: standalone
      QUIET_MODE: "false"
      TASK_DELAY_FROM: "5"
      TASK_DELAY_TO: "30"
    hostname: load-hotrod
    image: signoz/locust:1.2.3
    networks:
      default: null
    volumes:
      - type: bind
        source: /home/kayo/signoz/deploy/docker/common/locust-scripts
        target: /locust
        bind:
          create_host_path: true
  logspout:
    command:
      - syslog+tcp://otel-collector:2255
    container_name: signoz-logspout
    depends_on:
      otel-collector:
        condition: service_started
        required: true
    image: gliderlabs/logspout:v3.2.14
    networks:
      default: null
    restart: on-failure
    volumes:
      - type: bind
        source: /etc/hostname
        target: /etc/host_hostname
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        bind:
          create_host_path: true
  otel-collector:
    command:
      - --config=/etc/otel-collector-config.yaml
      - --manager-config=/etc/manager-config.yaml
      - --copy-path=/var/tmp/collector-config.yaml
      - --feature-gates=-pkg.translator.prometheus.NormalizeName
    container_name: signoz-otel-collector
    depends_on:
      clickhouse:
        condition: service_healthy
        required: true
      otel-collector-migrator-sync:
        condition: service_completed_successfully
        required: true
      query-service:
        condition: service_healthy
        required: true
    environment:
      LOW_CARDINAL_EXCEPTION_GROUPING: "false"
      OTEL_RESOURCE_ATTRIBUTES: host.name=signoz-host,os.type=linux
    image: signoz/signoz-otel-collector:0.111.21
    networks:
      default: null
    ports:
      - mode: ingress
        target: 4317
        published: "4317"
        protocol: tcp
      - mode: ingress
        target: 4318
        published: "4318"
        protocol: tcp
    restart: on-failure
    user: root
    volumes:
      - type: bind
        source: /home/kayo/signoz/deploy/docker/clickhouse-setup/otel-collector-config.yaml
        target: /etc/otel-collector-config.yaml
        bind:
          create_host_path: true
      - type: bind
        source: /home/kayo/signoz/deploy/docker/clickhouse-setup/otel-collector-opamp-config.yaml
        target: /etc/manager-config.yaml
        bind:
          create_host_path: true
      - type: bind
        source: /var/lib/docker/containers
        target: /var/lib/docker/containers
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: /
        target: /hostfs
        read_only: true
        bind:
          create_host_path: true
  otel-collector-migrator-async:
    command:
      - async
      - --dsn=tcp://clickhouse:9000
      - --up=
    container_name: otel-migrator-async
    depends_on:
      clickhouse:
        condition: service_healthy
        required: true
      otel-collector-migrator-sync:
        condition: service_completed_successfully
        required: true
    image: signoz/signoz-schema-migrator:0.111.21
    networks:
      default: null
  otel-collector-migrator-sync:
    command:
      - sync
      - --dsn=tcp://clickhouse:9000
      - --up=
    container_name: otel-migrator-sync
    depends_on:
      clickhouse:
        condition: service_healthy
        required: true
    image: signoz/signoz-schema-migrator:0.111.21
    networks:
      default: null
  query-service:
    command:
      - -config=/root/config/prometheus.yml
      - --use-logs-new-schema=true
      - --use-trace-new-schema=true
    container_name: signoz-query-service
    depends_on:
      clickhouse:
        condition: service_healthy
        required: true
      otel-collector-migrator-sync:
        condition: service_completed_successfully
        required: true
    environment:
      ALERTMANAGER_API_PREFIX: http://alertmanager:9093/api/
      ClickHouseUrl: tcp://clickhouse:9000
      DASHBOARDS_PATH: /root/config/dashboards
      DEPLOYMENT_TYPE: docker-standalone-amd
      GODEBUG: netdns=go
      SIGNOZ_LOCAL_DB_PATH: /var/lib/signoz/signoz.db
      STORAGE: clickhouse
      TELEMETRY_ENABLED: "true"
    healthcheck:
      test:
        - CMD
        - wget
        - --spider
        - -q
        - localhost:8080/api/v1/health
      timeout: 5s
      interval: 30s
      retries: 3
    image: signoz/query-service:0.66.0
    networks:
      default: null
    restart: on-failure
    volumes:
      - type: bind
        source: /home/kayo/signoz/deploy/docker/clickhouse-setup/prometheus.yml
        target: /root/config/prometheus.yml
        bind:
          create_host_path: true
      - type: bind
        source: /home/kayo/signoz/deploy/docker/dashboards
        target: /root/config/dashboards
        bind:
          create_host_path: true
      - type: bind
        source: /home/kayo/signoz/deploy/docker/clickhouse-setup/data/signoz
        target: /var/lib/signoz
        bind:
          create_host_path: true
  zookeeper-1:
    container_name: signoz-zookeeper-1
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOO_AUTOPURGE_INTERVAL: "1"
      ZOO_SERVER_ID: "1"
    hostname: zookeeper-1
    image: bitnami/zookeeper:3.7.1
    networks:
      default: null
    ports:
      - mode: ingress
        target: 2181
        published: "2181"
        protocol: tcp
      - mode: ingress
        target: 2888
        published: "2888"
        protocol: tcp
      - mode: ingress
        target: 3888
        published: "3888"
        protocol: tcp
    user: root
    volumes:
      - type: bind
        source: /home/kayo/signoz/deploy/docker/clickhouse-setup/data/zookeeper-1
        target: /bitnami/zookeeper
        bind:
          create_host_path: true
networks:
  default:
    name: clickhouse-setup_default
